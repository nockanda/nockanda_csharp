/*
  C#예제 96-1
  사물인터넷보드(wemos d1r1)에 D3포트에 부저를 연결했다!
  C#에서 날라오는 계이름을 수신한다음 부저로 연주해보자!
 */

#include <ESP8266WiFi.h>
#include <WiFiClient.h>
#include <ESP8266WebServer.h>
#include <ESP8266mDNS.h>

#ifndef STASSID
#define STASSID "~~~~~~" //WiFi 공유기의 ID
#define STAPSK  "~~~~~~" //WiFi 공유기의 PW
#endif

#define buzzer D3

const char* ssid     = STASSID;
const char* password = STAPSK;

ESP8266WebServer server(80);

const int led = LED_BUILTIN;

void handleRoot() {
  //클라이언트에서 날라오는 음계를 이용해서 부저를 재생해보자!
  //2093(도) 2349(레) 2637(미)
  server.send(200, "text/html", "OK");
  
  for(int i =0;i<server.args()-1;i++){
    Serial.print(server.argName(i));
    Serial.print("=");
    Serial.println(server.arg(i));

    // 포멧 => 비프음주파수/지속시간
    //비프음주파수와 지속시간을 분리를 해보자!
    int split = server.arg(i).indexOf('/');

    //비프음주파수(v1)
    String v1 = server.arg(i).substring(0,split);
    //지속시간(v2)
    String v2 = server.arg(i).substring(split+1,server.arg(i).length());

    tone(buzzer, (int)v1.toInt());
    delay(v2.toInt());
  }
  noTone(buzzer);
  
}


void handleNotFound() {
  String message = "File Not Found\n\n";
  message += "URI: ";
  message += server.uri();
  message += "\nMethod: ";
  message += (server.method() == HTTP_GET) ? "GET" : "POST";
  message += "\nArguments: ";
  message += server.args();
  message += "\n";
  for (uint8_t i = 0; i < server.args(); i++) {
    message += " " + server.argName(i) + ": " + server.arg(i) + "\n";
  }
  server.send(404, "text/plain", message);
}

void setup(void) {
  pinMode(led, OUTPUT);
  digitalWrite(led, 0);
  Serial.begin(115200);
  WiFi.begin(ssid, password);
  Serial.println("");

  // Wait for connection
  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
    Serial.print(".");
  }
  Serial.println("");
  Serial.print("Connected to ");
  Serial.println(ssid);
  Serial.print("IP address: ");
  Serial.println(WiFi.localIP());

  if (MDNS.begin("esp8266")) {
    Serial.println("MDNS responder started");
  }

  server.on("/", handleRoot);
  server.onNotFound(handleNotFound);

  server.begin();
  Serial.println("HTTP server started");
}

void loop(void) {
  server.handleClient();
}