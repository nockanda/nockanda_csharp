/*
 * 녹칸다의 웹클라이언트 샘플
 */
#include <ESP8266WiFi.h>
#include <SPI.h>
#include <MFRC522.h>
#include <Servo.h>

#define green D3
#define red D4

#define SS_PIN D10 //SDA
#define RST_PIN D9 //RST
 
MFRC522 rfid(SS_PIN, RST_PIN);
Servo myservo;

unsigned long gate_timer = 0;
unsigned long led_timer = 0;
bool is_tagged = false;


#ifndef STASSID
#define STASSID "~~~~~" //와이파이 검색했을때 뜨는 이름
#define STAPSK  "~~~~~" //패스워드
#endif

const char* ssid = STASSID;
const char* password = STAPSK;

const char* host = "192.168.0.5";
const int httpsPort = 60000;


WiFiClient client;
void setup() {
  Serial.begin(115200);
  pinMode(green,OUTPUT);
  pinMode(red,OUTPUT);
  
  SPI.begin(); 
  rfid.PCD_Init();
  myservo.attach(D2);
  myservo.write(0); //초기각도는 0도
  
  Serial.println();
  Serial.print("connecting to ");
  Serial.println(ssid);
  WiFi.mode(WIFI_STA);
  WiFi.begin(ssid, password);
  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
    Serial.print(".");
  }
  Serial.println("");
  Serial.println("WiFi connected");
  Serial.println("IP address: ");
  Serial.println(WiFi.localIP());

  
  Serial.print("connecting to ");
  Serial.println(host);

  
}

void loop() {
  if(millis() - gate_timer > 5000 && is_tagged){
    //인증된 RFID태그가 태깅된 이후로 5초가 경과된 상태
    //gate_timer가 세팅된 이후로 5초가 경과한 상태
    myservo.write(0);
    is_tagged = false;
  }

  if(millis() - led_timer > 1000){
    digitalWrite(green,LOW);
    digitalWrite(red,LOW);
  }
  
  if ( ! rfid.PICC_IsNewCardPresent())
    return;

  // Verify if the NUID has been readed
  if ( ! rfid.PICC_ReadCardSerial())
    return;

  led_timer = millis();

  String tag_id;
  for (byte i = 0; i < 4; i++) {
    if(rfid.uid.uidByte[i] < 10){
      //1자리수
      tag_id += '0' + String(rfid.uid.uidByte[i],HEX);
    }else{
      //2자리수
      tag_id += String(rfid.uid.uidByte[i],HEX);
    }
  }
  Serial.println(tag_id);


  //클라이언트와 서버와 커넥트
  if (!client.connect(host, httpsPort)) {
    Serial.println("connection failed");
    return;
  }

  String url = "/"+tag_id;

  //사물인터넷보드에서 RSS서버로 보내는 요청!
  client.print(String("GET ") + url + " HTTP/1.1\r\n" +
               "Host: " + host + "\r\n" +
               "Connection: close\r\n\r\n");

  //서버로부터 응답이 있을때까지 대기하겠다..
  //언제까지 기다려야하나요..?
  //timeout!
  unsigned long t = millis(); //생존시간
  while(1){
    if(client.available()) break;
    if(millis() - t > 10000) break;
  }


  //응답이 날라오는 부분!
  Serial.println("request sent");

  while(client.available()){
    String data = client.readStringUntil('\n'); //readline();
    if(data.indexOf("<response>") != -1){
      //<response>이걸로 시작하는 line이다!
      //<response>0
      //<response>1
      //<response>2
      char c = data[10];
      if(c == '0'){
        Serial.println("검색결과 없음!");
      }else if(c == '1'){
        Serial.println("주차 등록비 미납부!");
        myservo.write(0);
        //적색LED를 켠다
        digitalWrite(green,LOW);
        digitalWrite(red,HIGH);
      }else if(c == '2'){
        Serial.println("정상!");
        myservo.write(90);
        is_tagged = true;
        gate_timer = millis();

        //녹색LED를 켠다
        digitalWrite(green,HIGH);
        digitalWrite(red,LOW);
      }
    }
  }
  Serial.println("DONE");

  // Halt PICC
  rfid.PICC_HaltA();

  // Stop encryption on PCD
  rfid.PCD_StopCrypto1();
}