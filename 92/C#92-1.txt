/*
   C#예제 92-1 사물인터넷보드(wemos d1r1)을 웹서버로 동작시킨다음
   C#윈폼에서 GET방식으로 제어하기위한 녹칸다의 기본코드!
   GET방식으로 스탭모터를 제어하기 위한 예제!
*/

#include <ESP8266WiFi.h>

#define IN1 D6
#define IN2 D5
#define IN3 D4
#define IN4 D3

#ifndef STASSID
#define STASSID "~~~~" //WiFi 공유기의 ID
#define STAPSK  "~~~~" //WiFi 공유기의 PW
#endif

const char* ssid = STASSID;
const char* password = STAPSK;

WiFiServer server(80);

byte motor_pin_1 = IN4; //IN4
byte motor_pin_2 = IN2; //IN2
byte motor_pin_3 = IN3; //IN3
byte motor_pin_4 = IN1; //IN1

 int step_number = 0;    
 bool direct = 0;     
 long number_of_steps = 2048; 
 int step_delay = 5;

void setup() {
  Serial.begin(115200);
  pinMode(motor_pin_1,OUTPUT);
  pinMode(motor_pin_2,OUTPUT);
  pinMode(motor_pin_3,OUTPUT);
  pinMode(motor_pin_4,OUTPUT);
  
  // prepare LED
  pinMode(LED_BUILTIN, OUTPUT);
  digitalWrite(LED_BUILTIN, 0);

  // Connect to WiFi network
  Serial.println();
  Serial.println();
  Serial.print(F("Connecting to "));
  Serial.println(ssid);

  WiFi.mode(WIFI_STA);
  WiFi.begin(ssid, password);

  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
    Serial.print(F("."));
  }
  Serial.println();
  Serial.println(F("WiFi connected"));

  // Start the server
  server.begin();
  Serial.println(F("Server started"));

  // Print the IP address
  Serial.println(WiFi.localIP());
}

void loop() {
  // Check if a client has connected
  WiFiClient client = server.available();
  if (!client) {
    return;
  }
  Serial.println(F("new client"));

  client.setTimeout(5000); // default is 1000

  // Read the first line of the request
  String req = client.readStringUntil('\r');
  Serial.println(F("request: "));
  Serial.println(req);
  //GET /-2048 HTTP/1.1
  int mystep = req.substring(req.indexOf("GET /")+5,req.indexOf(" HTTP")).toInt();
  Serial.println(mystep);

  while (client.available()) {
    client.read();
  }
  client.print(F("HTTP/1.1 200 OK\r\nContent-Type: text/plain\r\n\r\n"));
  client.print("OK");
  client.flush();
  
  Serial.println(F("Disconnecting from client"));
  //스탭모터작동!
  nockanda_step(mystep);
}

void nockanda_step(int steps_to_move)
{
  int steps_left = abs(steps_to_move);  // how many steps to take

  // determine direction based on whether steps_to_mode is + or -:
  if (steps_to_move > 0) { direct = 1; }
  if (steps_to_move < 0) { direct = 0; }


  // decrement the number of steps, moving one step each time:
  while (steps_left > 0)
  {

      if (direct == 1)
      {
        step_number++;
        if (step_number == number_of_steps) {
          step_number = 0;
        }
      }
      else
      {
        if (step_number == 0) {
          step_number = number_of_steps;
        }
        step_number--;
      }
      steps_left--;

     switch (step_number % 4) {
      case 0:  // 1010
        digitalWrite(motor_pin_1, HIGH);
        digitalWrite(motor_pin_2, LOW);
        digitalWrite(motor_pin_3, HIGH);
        digitalWrite(motor_pin_4, LOW);
      break;
      case 1:  // 0110
        digitalWrite(motor_pin_1, LOW);
        digitalWrite(motor_pin_2, HIGH);
        digitalWrite(motor_pin_3, HIGH);
        digitalWrite(motor_pin_4, LOW);
      break;
      case 2:  //0101
        digitalWrite(motor_pin_1, LOW);
        digitalWrite(motor_pin_2, HIGH);
        digitalWrite(motor_pin_3, LOW);
        digitalWrite(motor_pin_4, HIGH);
      break;
      case 3:  //1001
        digitalWrite(motor_pin_1, HIGH);
        digitalWrite(motor_pin_2, LOW);
        digitalWrite(motor_pin_3, LOW);
        digitalWrite(motor_pin_4, HIGH);
      break;
    }
    //쉬는시간이 어느정도 있어야 하더라~
    delay(step_delay); //5ms정도 쉬어라~
  }
  
}