/*
   C#예제 93-1 사물인터넷보드(wemos d1r1)을 웹서버로 동작시킨다음
   C#윈폼에서 GET방식으로 제어하기위한 녹칸다의 기본코드!
   사물인터넷보드를 GET방식의 웹서버로 작동시키고
   미세먼지센서(GP2Y10)의 값을 C#윈폼으로 response하는 코드!
*/

#include <ESP8266WiFi.h>

#ifndef STASSID
#define STASSID "~~~~" //WiFi 공유기의 ID
#define STAPSK  "~~~~" //WiFi 공유기의 PW
#endif

const char* ssid = STASSID;
const char* password = STAPSK;

WiFiServer server(80);

int measurePin = A0;
int ledPower = D3; 

int samplingTime = 280;
int deltaTime = 40;
int sleepTime = 9680;

 
float voMeasured = 0;
float calcVoltage = 0;
float dustDensity = 0;

void setup() {
  Serial.begin(115200);
  pinMode(ledPower,OUTPUT);
  
  // prepare LED
  pinMode(LED_BUILTIN, OUTPUT);
  digitalWrite(LED_BUILTIN, 0);

  // Connect to WiFi network
  Serial.println();
  Serial.println();
  Serial.print(F("Connecting to "));
  Serial.println(ssid);

  WiFi.mode(WIFI_STA);
  WiFi.begin(ssid, password);

  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
    Serial.print(F("."));
  }
  Serial.println();
  Serial.println(F("WiFi connected"));

  // Start the server
  server.begin();
  Serial.println(F("Server started"));

  // Print the IP address
  Serial.println(WiFi.localIP());
}

void loop() {
  // Check if a client has connected
  WiFiClient client = server.available();
  if (!client) {
    return;
  }
  Serial.println(F("new client"));

  client.setTimeout(5000); // default is 1000

  // Read the first line of the request
  String req = client.readStringUntil('\r');
  Serial.println(F("request: "));
  Serial.println(req);

  //미세먼지센서값을 측정해서
  //response데이터에 포함시켜서 보낸다!
  float sensor = get_misemongi(); //ug/m3
  if(sensor < 0) sensor = 0;

  while (client.available()) {
    client.read();
  }
  client.print(F("HTTP/1.1 200 OK\r\nContent-Type: text/plain\r\n\r\n"));
  client.print(String(sensor));

  Serial.println(F("Disconnecting from client"));
}

float get_misemongi(){
  digitalWrite(ledPower,LOW); // power on the LED
  delayMicroseconds(samplingTime);
  voMeasured = analogRead(measurePin); // read the dust value
  delayMicroseconds(deltaTime);
  digitalWrite(ledPower,HIGH); // turn the LED off
  delayMicroseconds(sleepTime);
  // 0 - 5V mapped to 0 - 1023 integer values
  // recover voltage
  calcVoltage = voMeasured * (3.3/ 1024.0);
  // linear eqaution taken from http://www.howmuchsnow.com/arduino/airquality/
  // Chris Nafis (c) 2012
  dustDensity = 0.17 * calcVoltage - 0.1;
  //Serial.print("Raw Signal Value (0-1023): ");
  //Serial.print(voMeasured);
  //Serial.print(" - Voltage: ");
  //Serial.print(calcVoltage);
  //Serial.print(" - Dust Density: ");
  //Serial.println(dustDensity); // unit: mg/m3
  return dustDensity*1000;
}