/*
 C#104-3 버튼 2개를 D5, D6에 달아서 스마트폰 MQTT앱을 제어해보자!
 1번버튼을 누르면 nockanda를 전송하고 2번버튼을 누르면 forever를 전송해보자!
*/

#include <ESP8266WiFi.h>
#include <PubSubClient.h>

#define BUTTON1 D5
#define BUTTON2 D6
// Update these with values suitable for your network.

const char* ssid = "~~~~";
const char* password = "~~~~";
const char* mqtt_server = "broker.mqtt-dashboard.com";

WiFiClient espClient;
PubSubClient client(espClient);
unsigned long lastMsg = 0;
#define MSG_BUFFER_SIZE  (50)
char msg[MSG_BUFFER_SIZE];
int value = 0;

void setup_wifi() {

  delay(10);
  // We start by connecting to a WiFi network
  Serial.println();
  Serial.print("Connecting to ");
  Serial.println(ssid);

  WiFi.mode(WIFI_STA);
  WiFi.begin(ssid, password);

  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
    Serial.print(".");
  }

  randomSeed(micros());

  Serial.println("");
  Serial.println("WiFi connected");
  Serial.println("IP address: ");
  Serial.println(WiFi.localIP());
}

void callback(char* topic, byte* payload, unsigned int length) {
  Serial.print("Message arrived [");
  Serial.print(topic);
  Serial.print("] ");
  for (int i = 0; i < length; i++) {
    Serial.print((char)payload[i]);
  }
  Serial.println();

}

void reconnect() {
  // Loop until we're reconnected
  while (!client.connected()) {
    Serial.print("Attempting MQTT connection...");
    // Create a random client ID
    String clientId = "ESP8266Client-";
    clientId += String(random(0xffff), HEX);
    // Attempt to connect
    if (client.connect(clientId.c_str())) {
      Serial.println("connected");
      // Once connected, publish an announcement...
      client.publish("outNOCK", "hello world");
      // ... and resubscribe
      //client.subscribe("nockanda/room1");
    } else {
      Serial.print("failed, rc=");
      Serial.print(client.state());
      Serial.println(" try again in 5 seconds");
      // Wait 5 seconds before retrying
      delay(5000);
    }
  }
}

void setup() {
  pinMode(BUTTON1,INPUT_PULLUP);
  pinMode(BUTTON2,INPUT_PULLUP);
  Serial.begin(115200);
  setup_wifi();
  client.setServer(mqtt_server, 1883);
  client.setCallback(callback);
}

bool pre_button1 = HIGH;
bool pre_button2 = HIGH;
void loop() {

  if (!client.connected()) {
    reconnect();
  }
  client.loop();

  bool now_button1 = digitalRead(BUTTON1);
  if(pre_button1 == HIGH && now_button1 == LOW){
    //버튼1이 눌러졌을때..
    client.publish("outNOCK2", "NOCKANDA!!");
  }
  pre_button1 = now_button1;

  bool now_button2 = digitalRead(BUTTON2);
  if(pre_button2 == HIGH && now_button2 == LOW){
    //버튼2가 눌러졌을때..
    client.publish("outNOCK2", "FOREVER!!");
  }
  pre_button2 = now_button2;
}