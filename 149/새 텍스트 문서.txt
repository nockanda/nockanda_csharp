[C#윈폼149] (HttpListener#7/포터블 바코드 물류관리) 웹서버와 사물인터넷(IoT) 보드(ESP8266) 데이터베이스(MYSQL) 연동시리즈!(녹칸다/포로리야공대가자)

(HttpListener#7/포터블 바코드 재고관리 물류관리) 웹서버와 사물인터넷(IoT) 보드(ESP8266) 데이터베이스(MYSQL) 연동시리즈!
-이번 시리즈는 C#윈폼과 사물인터넷보드(Wemos d1r1/ESP8266) 사이의 상호작용에 관련된 것이다!
-때때로 IoT보드를 사용해보면 외부의 조력이 필요한 경우가 있다!
-특정한 상황에서 의사결정을 지원해줄 모니터링 서버라던지 데이터를 저장해줄 DB가 필요할때가 있다!
-C#윈폼에 HttpListener를 이용해서 웹서버를 작동시키고 사물인터넷보드를 지원해주는 API를 구현해보고자 한다!
-이때 C#윈폼은 웹서버(WebServer)가 되는 것이고 사물인터넷보드는 웹클라이언트(WebClient)가 되는 것이다!
-사물인터넷보드가 필요한 내용을 Request하면 C#윈폼은 결과를 Response해주는 API같은 형태인 것이다!
-HttpListener시리즈는 다양한 개념이 연계되어야 하기 때문에 만만치 않을 것이다!
-7편에서는 바코드리더(GM65)를 이용해서 상품의 재고관리를 할 수 있는 포터블 바코드 스캐너를 만들어 보는 컨셉이다!
-C#윈폼에서 돌고있는 웹서버에 DB가 세팅되어있고 상품의 정보가 데이터로 들어 있다고 해보자!
-(시나리오1) 마트에 상품이 진열되어있고 상품마다 가격표가 있다고 할때 전산상의 가격과 표시된 가격이 일치하는지 확인할 수 있도록 해보자!
-(사나리오2) 상품바코드를 찍으면 창고의 위치와 수량이 LCD화면에 출력될 수 있도록 해보자!
-1. 사물인터넷보드에서 상품바코드(EAN13)가 인식 되면 웹서버에 Request해서 상품정보를 시리얼 모니터에 출력한다!
-2. 웹서버에 연결된 데이터베이스(MYSQL)에서 할인정보를 변경할 수 있도록 해보자!
-3. 웹서버에서 변경된 정보는 포터블 바코드 스캐너에 달린 출력인터페이스(LCD)에 반영될 수 있도록 해보자!

 

 

(C#프로젝트/웹서버)

example149.zip
2.44MB
SQL기본구문(C#).txt
0.00MB
example149_db.sql
0.00MB
 

(사물인터넷보드/웹클라이언트)


C#149-1.txt
0.00MB
 

관련라이브러리(Adafruit-GFX-Library)

https://github.com/adafruit/Adafruit-GFX-Library

관련라이브러리(Adafruit_ILI9341)

https://github.com/adafruit/Adafruit_ILI9341